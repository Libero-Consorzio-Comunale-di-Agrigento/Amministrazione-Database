CREATE OR REPLACE PACKAGE Istanza IS /* MASTER_LINK */
/******************************************************************************
 NOME:        ISTANZA
 DESCRIZIONE: Gestione tabella ISTANZE.
 ANNOTAZIONI: .
 REVISIONI:   .
 <CODE>
 Rev.  Data       Autore  Descrizione.
 00    21/09/2006  MMALFERRARI  Prima emissione.
 01    11/07/2007  MMALFERRARI  Gestione campo ISTANZA_AMMINISTRATORE
                                Rimappate le funzioni a quelle di ISTANZE_TPK.
 02   27/11/2009  SNeg          Inserita set_istanza che rinomina istanza e
                                 in cascata sistema referenze
 </CODE>
******************************************************************************/
   -- Revisione del Package
   s_revisione CONSTANT Afc.t_revision := 'V1.02';
   s_table_name CONSTANT Afc.t_object_name := 'ISTANZE';
   SUBTYPE t_rowtype IS ISTANZE%ROWTYPE;
   -- Exceptions
   not_null_expected EXCEPTION;
   PRAGMA EXCEPTION_INIT( not_null_expected, -20901 );
   s_not_null_expected_number CONSTANT Afc_Error.t_error_number := -20901;
   s_not_null_expected_msg    CONSTANT Afc_Error.t_error_msg := 'Il valore passato non puo'' essere nullo.';
   -- Versione e revisione
   FUNCTION versione /* SLAVE_COPY */
   RETURN VARCHAR2;
   PRAGMA RESTRICT_REFERENCES( versione, WNDS );
   -- Costruttore di record chiave
   FUNCTION PK /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN istanze_tpk.t_PK;
   PRAGMA RESTRICT_REFERENCES( PK, WNDS );
   -- Controllo integrita chiave
   FUNCTION can_handle /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN NUMBER;
   PRAGMA RESTRICT_REFERENCES( can_handle, WNDS );
   -- Controllo integrita chiave
   -- wrapper boolean
   FUNCTION canHandle /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN BOOLEAN;
   PRAGMA RESTRICT_REFERENCES( canHandle, WNDS );
   -- Esistenza riga con chiave indicata
   FUNCTION exists_id /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN NUMBER;
   PRAGMA RESTRICT_REFERENCES( exists_id, WNDS );
   -- Esistenza riga con chiave indicata
   -- wrapper boolean
   FUNCTION existsId /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN BOOLEAN;
   PRAGMA RESTRICT_REFERENCES( existsId, WNDS );
   -- Messaggio previsto per il numero di eccezione indicato
   FUNCTION error_message /* SLAVE_COPY */
   ( p_error_number  IN Afc_Error.t_error_number
   ) RETURN Afc_Error.t_error_msg;
   PRAGMA RESTRICT_REFERENCES( error_message, WNDS );
   -- Inserimento di una riga
   PROCEDURE ins
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_PROGETTO  IN ISTANZE.PROGETTO%TYPE
   , p_ENTE  IN ISTANZE.ENTE%TYPE
   , p_DESCRIZIONE  IN ISTANZE.DESCRIZIONE%TYPE
   , p_DATABASE_USER IN ISTANZE.USER_ORACLE%TYPE
   , p_DATABASE_PASSWORD IN ISTANZE.PASSWORD_ORACLE%TYPE
   , p_DISLOCAZIONE  IN ISTANZE.DISLOCAZIONE%TYPE
   , p_DISLOCAZIONE_TEMPORANEA  IN ISTANZE.DISLOCAZIONE_TEMPORANEA%TYPE  DEFAULT NULL
   , p_INSTALLAZIONE  IN ISTANZE.INSTALLAZIONE%TYPE  DEFAULT NULL
   , p_VERSIONE  IN ISTANZE.VERSIONE%TYPE  DEFAULT NULL
   , p_DISLOCAZIONE_DIMENSIONAMENTI  IN ISTANZE.DISLOCAZIONE_DIMENSIONAMENTI%TYPE  DEFAULT NULL
   , p_NOTE  IN ISTANZE.NOTE%TYPE  DEFAULT NULL
   , p_LINGUA  IN ISTANZE.LINGUA%TYPE  DEFAULT 'I'
   , p_LINK_ORACLE  IN ISTANZE.LINK_ORACLE%TYPE  DEFAULT NULL
   , p_DATABASE_LINK  IN ISTANZE.DATABASE_LINK%TYPE  DEFAULT NULL
   , p_DATABASE_DRIVER  IN ISTANZE.DATABASE_DRIVER%TYPE  DEFAULT NULL
   , p_SERVIZIO  IN ISTANZE.SERVIZIO%TYPE  DEFAULT NULL
   , p_ISTANZA_AMMINISTRATORE IN ISTANZE.ISTANZA_AMMINISTRATORE%TYPE  DEFAULT NULL
   );
   -- Aggiornamento di una riga
   PROCEDURE upd
   ( p_NEW_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_NEW_PROGETTO  IN ISTANZE.PROGETTO%TYPE
   , p_NEW_ENTE  IN ISTANZE.ENTE%TYPE
   , p_NEW_DESCRIZIONE  IN ISTANZE.DESCRIZIONE%TYPE
   , p_NEW_DATABASE_USER IN ISTANZE.USER_ORACLE%TYPE
   , p_NEW_DATABASE_PASSWORD IN ISTANZE.PASSWORD_ORACLE%TYPE
   , p_NEW_DISLOCAZIONE  IN ISTANZE.DISLOCAZIONE%TYPE
   , p_NEW_DISLOCAZIONE_TEMPORANEA  IN ISTANZE.DISLOCAZIONE_TEMPORANEA%TYPE
   , p_NEW_INSTALLAZIONE  IN ISTANZE.INSTALLAZIONE%TYPE
   , p_NEW_VERSIONE  IN ISTANZE.VERSIONE%TYPE
   , p_NEW_DISL_DIMENSIONAMENTI  IN ISTANZE.DISLOCAZIONE_DIMENSIONAMENTI%TYPE
   , p_NEW_NOTE  IN ISTANZE.NOTE%TYPE  DEFAULT NULL
   , p_NEW_LINGUA  IN ISTANZE.LINGUA%TYPE
   , p_NEW_LINK_ORACLE  IN ISTANZE.LINK_ORACLE%TYPE  DEFAULT NULL
   , p_NEW_DATABASE_LINK  IN ISTANZE.DATABASE_LINK%TYPE  DEFAULT NULL
   , p_NEW_DATABASE_DRIVER  IN ISTANZE.DATABASE_DRIVER%TYPE  DEFAULT NULL
   , p_NEW_SERVIZIO  IN ISTANZE.SERVIZIO%TYPE  DEFAULT NULL
   , p_NEW_ISTANZA_AMMINISTRATORE IN ISTANZE.ISTANZA_AMMINISTRATORE%TYPE  DEFAULT NULL
   , p_OLD_ISTANZA  IN ISTANZE.Istanza%TYPE DEFAULT NULL
   , p_OLD_PROGETTO  IN ISTANZE.PROGETTO%TYPE DEFAULT NULL
   , p_OLD_ENTE  IN ISTANZE.ENTE%TYPE DEFAULT NULL
   , p_OLD_DESCRIZIONE  IN ISTANZE.DESCRIZIONE%TYPE DEFAULT NULL
   , p_OLD_DATABASE_USER IN ISTANZE.USER_ORACLE%TYPE DEFAULT NULL
   , p_OLD_DATABASE_PASSWORD IN ISTANZE.PASSWORD_ORACLE%TYPE DEFAULT NULL
   , p_OLD_DISLOCAZIONE  IN ISTANZE.DISLOCAZIONE%TYPE DEFAULT NULL
   , p_OLD_DISLOCAZIONE_TEMPORANEA  IN ISTANZE.DISLOCAZIONE_TEMPORANEA%TYPE DEFAULT NULL
   , p_OLD_INSTALLAZIONE  IN ISTANZE.INSTALLAZIONE%TYPE DEFAULT NULL
   , p_OLD_VERSIONE  IN ISTANZE.VERSIONE%TYPE DEFAULT NULL
   , p_OLD_DISL_DIMENSIONAMENTI  IN ISTANZE.DISLOCAZIONE_DIMENSIONAMENTI%TYPE DEFAULT NULL
   , p_OLD_NOTE  IN ISTANZE.NOTE%TYPE  DEFAULT NULL
   , p_OLD_LINGUA  IN ISTANZE.LINGUA%TYPE DEFAULT NULL
   , p_OLD_LINK_ORACLE  IN ISTANZE.LINK_ORACLE%TYPE  DEFAULT NULL
   , p_OLD_DATABASE_LINK  IN ISTANZE.DATABASE_LINK%TYPE  DEFAULT NULL
   , p_OLD_DATABASE_DRIVER  IN ISTANZE.DATABASE_DRIVER%TYPE  DEFAULT NULL
   , p_OLD_SERVIZIO  IN ISTANZE.SERVIZIO%TYPE  DEFAULT NULL
   , p_OLD_ISTANZA_AMMINISTRATORE IN ISTANZE.ISTANZA_AMMINISTRATORE%TYPE  DEFAULT NULL
   , p_check_OLD  IN INTEGER DEFAULT 0
   );
   -- Aggiornamento del campo di una riga
   PROCEDURE upd_column
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_column         IN VARCHAR2
   , p_value          IN VARCHAR2 DEFAULT NULL
   , p_literal_value  IN NUMBER   DEFAULT 1
   );
   PROCEDURE upd_column
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_column IN VARCHAR2
   , p_value  IN DATE
   );
   -- Cancellazione di una riga
   PROCEDURE del
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_PROGETTO  IN ISTANZE.PROGETTO%TYPE DEFAULT NULL
   , p_ENTE  IN ISTANZE.ENTE%TYPE DEFAULT NULL
   , p_DESCRIZIONE  IN ISTANZE.DESCRIZIONE%TYPE DEFAULT NULL
   , p_DATABASE_USER IN ISTANZE.USER_ORACLE%TYPE DEFAULT NULL
   , p_DATABASE_PASSWORD IN ISTANZE.PASSWORD_ORACLE%TYPE DEFAULT NULL
   , p_DISLOCAZIONE  IN ISTANZE.DISLOCAZIONE%TYPE DEFAULT NULL
   , p_DISLOCAZIONE_TEMPORANEA  IN ISTANZE.DISLOCAZIONE_TEMPORANEA%TYPE DEFAULT NULL
   , p_INSTALLAZIONE  IN ISTANZE.INSTALLAZIONE%TYPE DEFAULT NULL
   , p_VERSIONE  IN ISTANZE.VERSIONE%TYPE DEFAULT NULL
   , p_DISL_DIMENSIONAMENTI  IN ISTANZE.DISLOCAZIONE_DIMENSIONAMENTI%TYPE DEFAULT NULL
   , p_NOTE  IN ISTANZE.NOTE%TYPE  DEFAULT NULL
   , p_LINGUA  IN ISTANZE.LINGUA%TYPE DEFAULT NULL
   , p_LINK_ORACLE  IN ISTANZE.LINK_ORACLE%TYPE  DEFAULT NULL
   , p_DATABASE_LINK  IN ISTANZE.DATABASE_LINK%TYPE  DEFAULT NULL
   , p_DATABASE_DRIVER  IN ISTANZE.DATABASE_DRIVER%TYPE  DEFAULT NULL
   , p_SERVIZIO  IN ISTANZE.SERVIZIO%TYPE  DEFAULT NULL
   , p_ISTANZA_AMMINISTRATORE IN ISTANZE.ISTANZA_AMMINISTRATORE%TYPE  DEFAULT NULL
   , p_check_OLD  IN INTEGER DEFAULT 0
   );
   -- "Descriptor" di riga identificata da chiave
   -- (tratta input nullo ritornando null)
   FUNCTION get_descriptor /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN VARCHAR2;
   PRAGMA RESTRICT_REFERENCES( get_descriptor, WNDS );
   -- Attributo PROGETTO di riga esistente identificata da chiave
   FUNCTION get_PROGETTO /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.PROGETTO%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_PROGETTO, WNDS );
   -- Attributo ENTE di riga esistente identificata da chiave
   FUNCTION get_ENTE /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.ENTE%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_ENTE, WNDS );
   -- Attributo DESCRIZIONE di riga esistente identificata da chiave
   FUNCTION get_DESCRIZIONE /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.DESCRIZIONE%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_DESCRIZIONE, WNDS );
   -- Attributo DATABASE_USER (USER_ORACLE) di riga esistente identificata da chiave
   FUNCTION get_DATABASE_USER /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.USER_ORACLE%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_DATABASE_USER, WNDS );
   -- Attributo DATABASE_PASSWORD (PASSWORD_ORACLE) di riga esistente identificata da chiave
   FUNCTION get_DATABASE_PASSWORD /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.PASSWORD_ORACLE%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_DATABASE_PASSWORD, WNDS );
   -- Attributo DISLOCAZIONE di riga esistente identificata da chiave
   FUNCTION get_DISLOCAZIONE /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.DISLOCAZIONE%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_DISLOCAZIONE, WNDS );
   -- Attributo DISLOCAZIONE_TEMPORANEA di riga esistente identificata da chiave
   FUNCTION get_DISLOCAZIONE_TEMPORANEA /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.DISLOCAZIONE_TEMPORANEA%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_DISLOCAZIONE_TEMPORANEA, WNDS );
   -- Attributo INSTALLAZIONE di riga esistente identificata da chiave
   FUNCTION get_INSTALLAZIONE /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.INSTALLAZIONE%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_INSTALLAZIONE, WNDS );
   -- Attributo VERSIONE di riga esistente identificata da chiave
   FUNCTION get_VERSIONE /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.VERSIONE%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_VERSIONE, WNDS );
   -- Attributo DISLOCAZIONE_DIMENSIONAMENTI di riga esistente identificata da chiave
   FUNCTION get_DISL_DIMENSIONAMENTI /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.DISLOCAZIONE_DIMENSIONAMENTI%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_DISL_DIMENSIONAMENTI, WNDS );
   -- Attributo NOTE di riga esistente identificata da chiave
   FUNCTION get_NOTE /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.NOTE%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_NOTE, WNDS );
   -- Attributo LINGUA di riga esistente identificata da chiave
   FUNCTION get_LINGUA /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.LINGUA%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_LINGUA, WNDS );
   -- Attributo LINK_ORACLE di riga esistente identificata da chiave
   FUNCTION get_LINK_ORACLE /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.LINK_ORACLE%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_LINK_ORACLE, WNDS );
   -- Attributo DATABASE_LINK di riga esistente identificata da chiave
   FUNCTION get_DATABASE_LINK /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.DATABASE_LINK%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_DATABASE_LINK, WNDS );
   -- Attributo DATABASE_DRIVER di riga esistente identificata da chiave
   FUNCTION get_DATABASE_DRIVER /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.DATABASE_DRIVER%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_DATABASE_DRIVER, WNDS );
   -- Attributo SERVIZIO di riga esistente identificata da chiave
   FUNCTION get_SERVIZIO /* SLAVE_COPY */
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) RETURN ISTANZE.SERVIZIO%TYPE;
   PRAGMA RESTRICT_REFERENCES( get_SERVIZIO, WNDS );
   -- Aggiornamento attributo PROGETTO di riga esistente identificata da chiave
   PROCEDURE set_PROGETTO
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.PROGETTO%TYPE
   );
   -- Aggiornamento attributo ENTE di riga esistente identificata da chiave
   PROCEDURE set_ENTE
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.ENTE%TYPE
   );
   -- Aggiornamento attributo DESCRIZIONE di riga esistente identificata da chiave
   PROCEDURE set_DESCRIZIONE
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.DESCRIZIONE%TYPE
   );
   -- Aggiornamento attributo DATABASE_USER (USER_ORACLE) di riga esistente identificata da chiave
   PROCEDURE set_DATABASE_USER
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.USER_ORACLE%TYPE
   );
   -- Aggiornamento attributo DATABASE_PASSWORD (PASSWORD_ORACLE) di riga esistente identificata da chiave
   PROCEDURE set_DATABASE_PASSWORD
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.PASSWORD_ORACLE%TYPE
   , p_IS_PWD_CRYPTED IN NUMBER
   );
   -- Aggiornamento attributo DISLOCAZIONE di riga esistente identificata da chiave
   PROCEDURE set_DISLOCAZIONE
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.DISLOCAZIONE%TYPE
   );
   -- Aggiornamento attributo DISLOCAZIONE_TEMPORANEA di riga esistente identificata da chiave
   PROCEDURE set_DISLOCAZIONE_TEMPORANEA
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.DISLOCAZIONE_TEMPORANEA%TYPE
   );
   -- Aggiornamento attributo INSTALLAZIONE di riga esistente identificata da chiave
   PROCEDURE set_INSTALLAZIONE
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.INSTALLAZIONE%TYPE
   );
   -- Aggiornamento attributo VERSIONE di riga esistente identificata da chiave
   PROCEDURE set_VERSIONE
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.VERSIONE%TYPE
   );
   -- Aggiornamento attributo DISLOCAZIONE_DIMENSIONAMENTI di riga esistente identificata da chiave
   PROCEDURE set_DISL_DIMENSIONAMENTI
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.DISLOCAZIONE_DIMENSIONAMENTI%TYPE
   );
   -- Aggiornamento attributo NOTE di riga esistente identificata da chiave
   PROCEDURE set_NOTE
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.NOTE%TYPE
   );
   -- Aggiornamento attributo LINGUA di riga esistente identificata da chiave
   PROCEDURE set_LINGUA
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.LINGUA%TYPE
   );
   -- Aggiornamento attributo LINK_ORACLE di riga esistente identificata da chiave
   PROCEDURE set_LINK_ORACLE
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.LINK_ORACLE%TYPE
   );
   -- Aggiornamento attributo DATABASE_LINK di riga esistente identificata da chiave
   PROCEDURE set_DATABASE_LINK
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.DATABASE_LINK%TYPE
   );
   -- Aggiornamento attributo DATABASE_DRIVER di riga esistente identificata da chiave
   PROCEDURE set_DATABASE_DRIVER
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.DATABASE_DRIVER%TYPE
   );
   -- Aggiornamento attributo SERVIZIO di riga esistente identificata da chiave
   PROCEDURE set_SERVIZIO
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.SERVIZIO%TYPE
   );
   -- Aggiornamento attributo ISTANZA_AMMINISTRATORE di riga esistente identificata da chiave
   PROCEDURE set_ISTANZA_AMMINISTRATORE
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_value IN ISTANZE.ISTANZA_AMMINISTRATORE%TYPE
   );
   -- Aggiornamento campo ISTANZA, in cascata modifica tutte le referenze all'istanza.
   PROCEDURE set_link_oracle_like_ad4
   ( p_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_check_exists_master in number default 1
   );
   PROCEDURE set_ISTANZA
   ( p_old_ISTANZA  IN ISTANZE.Istanza%TYPE
   , p_new_ISTANZA  IN ISTANZE.Istanza%TYPE
   ) ;
   -- Righe corrispondenti alla selezione indicata
   FUNCTION get_rows /* SLAVE_COPY */
   ( p_ISTANZA  IN VARCHAR2 DEFAULT NULL
   , p_PROGETTO  IN VARCHAR2 DEFAULT NULL
   , p_ENTE  IN VARCHAR2 DEFAULT NULL
   , p_DESCRIZIONE  IN VARCHAR2 DEFAULT NULL
   , p_DATABASE_USER  IN VARCHAR2 DEFAULT NULL
   , p_DATABASE_PASSWORD  IN VARCHAR2 DEFAULT NULL
   , p_DISLOCAZIONE  IN VARCHAR2 DEFAULT NULL
   , p_DISLOCAZIONE_TEMPORANEA  IN VARCHAR2 DEFAULT NULL
   , p_INSTALLAZIONE  IN VARCHAR2 DEFAULT NULL
   , p_VERSIONE  IN VARCHAR2 DEFAULT NULL
   , p_DISLOCAZIONE_DIMENSIONAMENTI  IN VARCHAR2 DEFAULT NULL
   , p_NOTE  IN VARCHAR2 DEFAULT NULL
   , p_LINGUA  IN VARCHAR2 DEFAULT NULL
   , p_LINK_ORACLE  IN VARCHAR2 DEFAULT NULL
   , p_DATABASE_LINK  IN VARCHAR2 DEFAULT NULL
   , p_DATABASE_DRIVER  IN VARCHAR2 DEFAULT NULL
   , p_SERVIZIO  IN VARCHAR2 DEFAULT NULL
   , p_ISTANZA_AMMINISTRATORE IN VARCHAR2 DEFAULT NULL
   , p_other_condition IN VARCHAR2 DEFAULT NULL
   , p_QBE IN NUMBER DEFAULT 0
   ) RETURN Afc.t_ref_cursor;
   -- Numero di righe corrispondente alla selezione indicata
   -- Almeno un attributo deve essere valido (non null)
   FUNCTION count_rows /* SLAVE_COPY */
   ( p_ISTANZA  IN VARCHAR2 DEFAULT NULL
   , p_PROGETTO  IN VARCHAR2 DEFAULT NULL
   , p_ENTE  IN VARCHAR2 DEFAULT NULL
   , p_DESCRIZIONE  IN VARCHAR2 DEFAULT NULL
   , p_DATABASE_USER  IN VARCHAR2 DEFAULT NULL
   , p_DATABASE_PASSWORD  IN VARCHAR2 DEFAULT NULL
   , p_DISLOCAZIONE  IN VARCHAR2 DEFAULT NULL
   , p_DISLOCAZIONE_TEMPORANEA  IN VARCHAR2 DEFAULT NULL
   , p_INSTALLAZIONE  IN VARCHAR2 DEFAULT NULL
   , p_VERSIONE  IN VARCHAR2 DEFAULT NULL
   , p_DISLOCAZIONE_DIMENSIONAMENTI  IN VARCHAR2 DEFAULT NULL
   , p_NOTE  IN VARCHAR2 DEFAULT NULL
   , p_LINGUA  IN VARCHAR2 DEFAULT NULL
   , p_LINK_ORACLE  IN VARCHAR2 DEFAULT NULL
   , p_DATABASE_LINK  IN VARCHAR2 DEFAULT NULL
   , p_DATABASE_DRIVER  IN VARCHAR2 DEFAULT NULL
   , p_SERVIZIO  IN VARCHAR2 DEFAULT NULL
   , p_ISTANZA_AMMINISTRATORE IN VARCHAR2 DEFAULT NULL
   , p_other_condition IN VARCHAR2 DEFAULT NULL
   , p_QBE IN NUMBER DEFAULT 0
   ) RETURN INTEGER;
   FUNCTION IS_ISTANZA_MASTER /* SLAVE_COPY */
   (p_istanza varchar2 default si4.istanza
   ) return number;
   FUNCTION GET_ISTANZA_MASTER /* SLAVE_COPY */
   (p_progetto varchar2)
   return varchar2;
END Istanza;
/

